----------------
4.2.5 常见问题
----------------

Q:  怎么查看AIUI上串口消息的处理接收
	A： 通过\ ``adb logcat -s UART_Manager:*``\ （adb连接参照\ :ref:`调试 <uart_debug-label>`\ ）查看AIUI串口的日志。

Q:  串口消息构造后发送给AIUI，为什么没有执行对应操作（如发了合成命令，没有合成播放等）？
	A： 没有执行对应操作可能的原因分三种：

			1. 消息格式构造问题

			2. 消息ID重复

			3. 消息内容构造问题

		对于上述三种原因可以按如下方法依次排查：

			1. 如果收到了AIUI对消息的确认消息，那说明消息构造没问题，反之应该检查下消息构造的格式是否有问题。

			2. 因为协议中\ :ref:`消息ID <uart_msg_id-label>`\ 的说明，AIUI会对消息ID与之前接受的200条消息ID进行比较，
			   如果有相同则认为是因确认超时重发的消息，而进行过滤，直接返回对应的确认消息，不会对消息进行解析处理。
			   
			   通过\ ``adb logcat -s UART_Manager:*``\ （adb连接参照\ :ref:`调试 <uart_debug-label>`\ ）查看AIUI串口的日志。
			   
			   如果log中有::
			   
					recv same data, send ack drop it !!!
			   
			   那说明消息ID与之前有重复，请检查消息ID的构造逻辑问题。
			   
			3. 消息内容的构造问题，请仔细对照\ :ref:`主控消息 <uart_control_msg-label>`\ 内定义的消息内容格式，
			   比如合成消息中的文本内容的编码格式要为utf-8。
   
Q:  底板上有两个串口，AIUI使用了UART1，开发程序可以使用UART0吗？
	A： UART0是AIUI的调试串口，不能正常读写，所以UART0不能使用。

		如果对AIUI本身的串口功能有依赖，第三方应用如果需要读写串口发送自己的数据内容，
		可以考虑使用\ :ref:`串口自定义 <uart_custome-label>`\ 的功能。

		如果对AIUI本身的串口功能无依赖，\ :ref:`AIUI软件内部关系 <demoboard_relationship-label>`\ 中
		ControlService负责串口通信，所以将ControlService卸载即可独立读写串口（不推荐）。
		
Q：使用UARTKit SDK时设备初始化失败
	A：设备初始化失败导致的原因有两种，一个是设备打开失败，可能由设备名不存在、没有权限；第二是设备设置失败，
	因为不同上位机的串口配置不一样，UARTKit SDK的串口初始化设置仅在评估板上测试可用，所以需要开发者自己更改UARTKit
	SDK中设备初始化参数的代码，自行修改测试实现。
		
		
Q：使用UARTKit SDK时日志中频繁出现DropHead，长时间不回调消息接收
	A：串口数据结构定义中定义了\ :ref:`同步头 <uart_data_format-label>`\ ，在底层进行数据接收中，会从数据流中
	匹配同步头，作为一条消息的数据开始标记，如果数据流中一致没有同步头，那就会一直打印drop head的日志。这种情况
	大部分的原因是上位机接收有误导致，可以打印具体接收的数据和定义的串口数据格式比较确定。
	
Q：使用UARTKit SDK时底层打印接收日志，但是一直不回调消息接收
	A：如上Drop Head的问题，串口接收数据时再寻找到消息数据开始的同步头后，会根据其后的\ :ref:`长度信息 <uart_data_format-label>`\ 接收
	一定长度的数据，然后校验通过后向上传递，如果接收数据有误，导致长度信息解析过大，那后面所有正常的消息都会当作这条消息的数据一直
	接收，导致上层长时间没有消息回调接收，即使该消息接收完成，也会因为校验不通过直接丢弃。
	
	串口接收数据出错也是导致如上异常的原因，需要排查上位机的串口接收功能。如果只是在音乐、火车、新闻等数据量大的情况
	下有这个问题，可以通过\ :ref:`串口结果过滤 <uart_msg_filter-label>`\ 将大数据量的技能消息过滤，只在AIUI模块上处理，不传输到上位机。
	也可以在底层接收数据时，对解析接收长度做过滤，解析出超过限值的消息直接丢弃，AIUI压缩过后的数据量是6k以内。

	




